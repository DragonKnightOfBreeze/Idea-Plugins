{
	parserClass="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationParser"
	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
	psiClassPrefix="StellarisLocalization"
	psiImplClassSuffix="Impl"
	psiPackage="com.windea.plugin.idea.stellaris.localization.psi"
	psiImplPackage="com.windea.plugin.idea.stellaris.localization.psi.impl"

	elementTypeClass="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationElementType"
	elementTypeHolderClass="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationTypes"
	tokenTypeClass="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationTokenType"
	psiImplUtilClass="com.windea.plugin.idea.stellaris.localization.psi.impl.StellarisLocalizationPsiImplUtil"

	tokens=[
	  COLON=':'
	  PARAMETER_SEPARATOR="|"
	  NUMBER='regexp:\d+'
	  BLANK='wregexp:\s+'
	  COMMENT='regexp:#[^\r\n]*'
	  ROOT_COMMENT='regexp:#[^\r\n]*'
	  //行尾注释不能包含双引号，否则会有解析冲突
	  END_OF_LINE_COMMENT='regexp:#[^"\r\n]*'
	  LOCALE_ID='regexp:[a-z_]+'
	  PROPERTY_KEY_ID="regexp:[a-zA-Z0-9_.\-']+"
	  VALID_ESCAPE_TOKEN='regexp:\\[rnt"$£§%]'
	  INVALID_ESCAPE_TOKEN='regexp:\\.'
	  LEFT_QUOTE="\""
	  RIGHT_QUOTE="\""
	  PROPERTY_REFERENCE_START="$"
	  PROPERTY_REFERENCE_ID="regexp:[a-zA-Z0-9_.\-' \t]+"
      PROPERTY_REFERENCE_PARAMETER='regexp:[^$"\r\n]+'
	  PROPERTY_REFERENCE_END="$"
	  ICON_START="£"
	  ICON_ID='regexp:[a-zA-Z0-9\-_\\/]+'
	  ICON_PARAMETER='regexp:[^£"\r\n]+'
	  ICON_END="£"
	  SERIAL_NUMBER_START="%"
	  SERIAL_NUMBER_ID="regexp:[A-Z]"
	  SERIAL_NUMBER_END="%"
      CODE_START="["
      CODE_TEXT_TOKEN='regexp:[^"\[\]\r\n]+'
      CODE_END="]"
	  COLORFUL_TEXT_START="§"
	  COLOR_CODE="regexp:[a-zA-Z]"
	  COLORFUL_TEXT_END="§!"
	  //双引号和百分号实际上不需要转义
	  STRING_TOKEN='regexp:[^\[\r\n\\]+'
	]
}

//规则定义可以忽略空白
//直接导向token的rule，在flex文件中需要使用对应的token
//即使idea提示不需要转义，一些字符在regexp中仍然需要转义

root ::= ROOT_COMMENT * [root_item]
private root_item ::= [locale] property_list * //locale尽管实际上是必须的，为了兼容快速导航功能，改为可选
private property_list ::= END_OF_LINE_COMMENT | COMMENT | property

locale ::= LOCALE_ID ":" {
  pin=1
  mixin="com.windea.plugin.idea.stellaris.localization.psi.impl.StellarisLocalizationNamedElementImpl"
  implements="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationNamedElement"
  methods=[getName setName getIcon getReference getStellarisLocale]
}

property ::= property_key ":" [NUMBER] property_value {
  pin=1
  elementTypeFactory="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationStubElementTypes.getPropertyType"
  extends="com.windea.plugin.idea.stellaris.localization.psi.impl.StellarisLocalizationStubElementImpl<?>"
  implements="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationNamedElement"
  stubClass="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationPropertyStub"
  methods=[getName setName getIcon getValue getStellarisLocale]
}
property_key ::= PROPERTY_KEY_ID
property_value ::= LEFT_QUOTE rich_text * RIGHT_QUOTE

rich_text ::= property_reference | code | icon | serial_number | colorful_text | escape | string

string ::= STRING_TOKEN{
  extends=rich_text
}
escape ::= VALID_ESCAPE_TOKEN | INVALID_ESCAPE_TOKEN{
  extends=rich_text
}
property_reference ::= PROPERTY_REFERENCE_START [property_reference_name] [PARAMETER_SEPARATOR [PROPERTY_REFERENCE_PARAMETER]] PROPERTY_REFERENCE_END {
  pin=1
  extends=rich_text
  mixin="com.windea.plugin.idea.stellaris.localization.psi.impl.StellarisLocalizationNamedElementImpl"
  implements="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationNamedElement"
  methods=[getName setName getTextOffset getReference getStellarisColor]
}
private property_reference_name ::= code | PROPERTY_REFERENCE_ID
icon ::= ICON_START icon_name [PARAMETER_SEPARATOR [ICON_PARAMETER]] ICON_END {
  pin=1
  extends=rich_text
  mixin="com.windea.plugin.idea.stellaris.localization.psi.impl.StellarisLocalizationNamedElementImpl"
  implements="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationNamedElement"
  methods=[getName setName getTextOffset  getReference]
}
private icon_name ::= code | property_reference | ICON_ID
serial_number ::= SERIAL_NUMBER_START SERIAL_NUMBER_ID SERIAL_NUMBER_END {
  pin=1
  extends=rich_text
  mixin="com.windea.plugin.idea.stellaris.localization.psi.impl.StellarisLocalizationNamedElementImpl"
  implements="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationNamedElement"
  methods=[getName setName getTextOffset getStellarisSerialNumber getReference]
}
code ::= CODE_START code_text? CODE_END{
  pin=1
  extends=rich_text
  implements="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationRichText"
}
private code_text ::= CODE_TEXT_TOKEN
colorful_text ::= COLORFUL_TEXT_START COLOR_CODE rich_text* [COLORFUL_TEXT_END]{
  pin=1
  extends=rich_text
  mixin="com.windea.plugin.idea.stellaris.localization.psi.impl.StellarisLocalizationNamedElementImpl"
  implements="com.windea.plugin.idea.stellaris.localization.psi.StellarisLocalizationNamedElement"
  methods=[getName setName getTextOffset getStellarisColor getReference]
}
