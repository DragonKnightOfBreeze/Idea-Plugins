types:
  type[ambient_object]:
    path: "/common/ambient_objects"
    subtype[show_name]:
      show_name: yes
    localisation:
      sybtype[show_name]:
        ### required
        name!: "$"
    subtype[selectable]:
      selectable: yes

  type[asteroid_belt]:
    path: "/common/asteroid_belt"

  type[attitude]:
    path: "/common/attitudes"
    localisation:
      ### required
      name!: "attribute_$"

  type[button_effect]:
    path: "/common/button_effects"

  type[country_customization]:
    path: "/common/country_customization"

  type[system_type]:
    path: "/common/system_types"
    localisation:
      ### required
      name: "$"

  type[start_screen_message]:
    path: "/common/start_screen_messages"
    $type_key_filter: part

  type[precursor_civilization]:
    path: "/common/precursor_civilizations"

  ### replace_scope: [root: system, this: system]
  type[sector_type]:
    path: "/common/sector_types"
    localisation:
      ### required
      name: "$"
    $replace_scope:
      root: system
      this: system

  ### replace_scope: [root: sector, this: sector]
  type[sector_focus]:
    path: "/common/sector_focuses"
    localisation:
      ### required
      name: "$"

  type[map_mode]:
    path: "/common/map_modes"
    localisation:
      ### required
      name: "$"
      ### required
      desc: "$_desc"

  type[ai_budget]:
    path: "/common/ai_budget"

  type[trade_conversion]:
    path: "/common/trade_conversions"

  type[economic_plan]:
    path: "/common/economic_plans"

ambient_object:
  subtype[show_name]:
    name: $localisation
  subtype[!show_name]:
    name: string
  subtype[selectable]:
    description: $localisation
    tooltip: $localisation
  entity: $model_entity
  selectable: boolean
  show_name:  boolean

asteroid_belt_type:
  mesh: string
  shader: string

attribute:
  type: string
  behaviour:
    ### 0..1
    attack: boolean
    ### 0..1
    weaken: boolean
    ### 0..1
    alliance: boolean
    ### 0..1
    vassalize: boolean
    ### 0..1
    trade: boolean
    ### 0..1
    coexist: boolean

button_effect:
  ### replace_scope: [this: any, root: any, from: country]
  potential:
    $trigger.name: $trigger.value
  ### replace_scope: [this: any, root: any, from: country]
  allow:
    $trigger.name: $trigger.value
  ### replace_scope: [this: any, root: any, from: country]
  ### 0..1
  effect:
    $trigger.name: $trigger.value

country_customization:
  colony_shelter:
    default: $building[capital]
    ### 0..inf
    $planet_class: $building[colonizable]
  ### 0..inf
  graphical_culture_for_random_empire:
    ### 0..inf
    $graphical_culture:
      ### 0..inf
      modifier:
        add: int
        species_portrait: $portrait
  ### replace_scope: [this: country, root: country]
  ### 0..1
  weight:
    ### 0..1
    base: int
    $modifier_rule_add.name: $modifier_rule_add.value

system_type:
  ### replace_scope: [this: system, root: system]
  potential:
    $trigger.name: $trigger.value
  ### 0..1
  weight_modifier:
    ### 0..1
    base: int
    $modifier_rule: $modifier_rule

start_screen_message:
  location: int
  localisation: $localisation
  ### replace_scope: {root: country, this: country}
  trigger:
    $trigger.name: $trigger.value

precursor_civilization:
  size: int
  ### 0..1
  possible:
    $trigger.name: $trigger.value

sector_type:
  system_scores:
    ### 0..1
    base: int
    $modifier_rule.name: $modifier_rule.value
  local_capital_scores:
    ### 0..1
    base: int
    ### 0..1
    modifier:
      mult: float
      $trigger.name: $trigger.value
  resource_conversion_table:
    energy: int
    minerals: int
  resources: $resources # TODO
  max_jumps: int

sector_focus:
  ai_weight:
    weight: float
    $modifier_rule.name: $modifier_rule.value
  ### 0..inf
  district:
    key: $district
    weight:
      weight: float
      $modifier_rule.name: $modifier_rule.value
  ### 0..inf
  building:
    key: $building
    weight:
      weight: float
      $modifier_rule.name: $modifier_rule.value

map_mode:
  icon: $sprite
  enable_terra_incognita: boolean
  ### 0..1
  can_change_point_of_view: boolean
  ### 0..1
  shortcut: string
  ### 0..1
  display_claims: boolean
  ### 1..inf
  color:
    ### required | 3..4
    value: $country | float[]
    ### 0..1
    custom_tooltip: $localisation
    ### 0..1
    hardcoded_tooltip: $opnion | $country
    ### replace_scope: {root: country, this: country, from: country}
    condition:
      $trigger.name: $trigger.value

ai_budget:
  resource: $resource
  type: $expenditure | $upkeep
  category: $economic_category
  potential:
    $trigger.name: $trigger.value
  ### 0..1
  fraction:
    weight: float
    $modifier_rule.name: $modifier_rule.value
  ### 0..1
  static_max:
    base: int
    $modifier_rule.name: $modifier_rule.value
  ### 0..1
  static_min:
    base: int
    $modifier_rule.name: $modifier_rule.value

trade_conversion:
  ### replace_scope: {this: country, from: country}
  potential:
    $trigger.name: $trigger.value
  weight:
    weight: int
  conversion_rate:
    ### 1..inf
    $resource: float
  economic_category: $economic_category

economic_plan:
  type: string
  income:
    ### 1..inf
    $resource: int
  focus:
    ### 1..inf
    $resource: int
  subplan:
    potential:
      ### replace_scope: {this: country, root: country}
      $trigger.name: $trigger.value
    income:
      ### 1..inf
      $resource: int
    focus:
      ### 1..inf
      $resource: int
  pops: int
  empire_size: float
  ### replace_scope: {this: country, root: country}
  ai_weight:
    weight: float
    $modifier_rule.name: $modifier_rule.value